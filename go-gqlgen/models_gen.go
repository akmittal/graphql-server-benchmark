// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package go_gqlgen

import (
	"fmt"
	"io"
	"strconv"
)

type NewTodo struct {
	Text string `json:"text"`
}

type Status string

const (
	StatusDone    Status = "DONE"
	StatusPending Status = "PENDING"
)

var AllStatus = []Status{
	StatusDone,
	StatusPending,
}

func (e Status) IsValid() bool {
	switch e {
	case StatusDone, StatusPending:
		return true
	}
	return false
}

func (e Status) String() string {
	return string(e)
}

func (e *Status) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = Status(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Status", str)
	}
	return nil
}

func (e Status) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
